{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNA,MAAM;EAACA;AAAD,IAAOC,EAAE,CAACC,IAAhB;AACA,MAAM;EAAEC;AAAF,IAAeF,EAAE,CAACG,OAAxB;AACA,MAAM;EACEC,gCADF;EAEDC,sCAFC;EAGEC,YAHF;EAGgBC;AAHhB,IAIOP,EAAE,CAACQ,UAJhB;AAKA,MAAM;EAAEC;AAAF,IAAgBT,EAAE,CAACU,IAAzB;AACA,MAAM;EAAEC;AAAF,IAAoBX,EAAE,CAACY,QAA7B;AACA,MAAM;EAAGC;AAAH,IAAkCb,EAAE,CAACc,QAA3C;AACA,MAAM;EAAEC;AAAF,IAAqBf,EAAE,CAACgB,OAA9B;AACA,MAAMC,kBAAkB,GAAGb,gCAA3B;AACA,MAAMc,wBAAwB,GAAGb,sCAAjC;AAEA;;AAEA,MAAMc,oCAAoC,GAAG,MAAM;EAE/C,MAAMC,QAAQ,GAAGX,SAAS,CACpBY,MAAF,IAAcA,MAAM,CAAE,aAAF,CAAN,CAAwBC,kBAAxB,EADQ,EAEtB,EAFsB,CAA1B,CAF+C,CAO/C;;EACA,IAAI,WAAWF,QAAf,EAAyB;IACrB,OAAO,IAAP;EACH;;EAED,MAAM,CAAEG,IAAF,EAAQC,OAAR,IAAoBb,aAAa,CAAE,UAAF,EAAcS,QAAd,EAAwB,MAAxB,CAAvC;EAEA,MAAMK,UAAU,GAAI,OAAOF,IAAI,CAAE,yBAAF,CAAX,KAA6C,WAA7C,IAA4DA,IAAI,CAAE,yBAAF,CAAJ,KAAsC,IAAnG,GAA2G,EAA3G,GAA+GA,IAAI,CAAE,yBAAF,CAAtI,CAd+C,CAgB/C;;EACA,MAAMG,oBAAoB,GAAKC,KAAF,IAAa;IAEtC,IAAG,OAAOA,KAAP,KAAiB,WAAjB,IAAgCA,KAAK,KAAK,IAA7C,EAAoD;MAChDA,KAAK,GAAG,EAAR;IACH;;IAEDH,OAAO,CAAE,EAAE,GAAGD,IAAL;MAAWK,uBAAuB,EAAED;IAApC,CAAF,CAAP;EAEH,CARD;;EAUA,MAAM,CAAEE,UAAF,EAAcC,aAAd,IAAgC5B,QAAQ,CAC9CuB,UAAU,CAACM,OAAX,CAAmB,UAAnB,IAAiC,CAAnC,GAAyC,OAAzC,GAAmD,UADH,CAA9C;EAKA,OACI,kIACA,iFAEU,OAAON,UAAP,KAAsB,WAAtB,IAAqCA,UAAU,IAAI,IAAnD,IAA2DA,UAAU,IAAI,EAA3E,GAAmF;AACnG;AACA;AACA,8BAA8BA,UAAW;AACzC,cAJgB,GAID,EANP,CADA,EAUA,kEAAC,0BAAD;IACI,SAAS,EAAC,+BADd;IAEI,KAAK,EAAC,aAFV;IAGI,WAAW,EAAG,IAHlB;IAII,IAAI,EAAC;EAJT,GAOI,kEAAC,kBAAD;IACI,KAAK,EAAGI,UADZ;IAEI,QAAQ,EAAGC,aAFf;IAGI,KAAK,EAAG/B,EAAE,CAAE,mBAAF,CAHd;IAII,mBAAmB,MAJvB;IAKI,OAAO;EALX,GAOI,kEAAC,wBAAD;IACI,KAAK,EAAC,OADV;IAEI,KAAK,EAAGA,EAAE,CAAE,OAAF;EAFd,EAPJ,EAWI,kEAAC,wBAAD;IACI,KAAK,EAAC,UADV;IAEI,KAAK,EAAGA,EAAE,CAAE,UAAF;EAFd,EAXJ,CAPJ,EAuBQ8B,UAAU,KAAK,OAAjB,IACE,kEAAC,YAAD;IACI,MAAM,EAAGG,mBAAmB,CAACC,eADjC;IAEI,KAAK,EAAIR,UAAU,CAACM,OAAX,CAAmB,UAAnB,IAA+B,CAAhC,GAAmCN,UAAnC,GAA8C,EAF1D;IAGI,QAAQ,EAAKE,KAAF,IAAaD,oBAAoB,CAAEC,KAAF,CAHhD;IAII,SAAS,EAAG,IAJhB;IAKI,WAAW,EAAG;EALlB,EAxBR,EAgCQE,UAAU,KAAK,UAAjB,IACE,kEAAC,cAAD;IACI,KAAK,EAAIJ,UAAU,CAACM,OAAX,CAAmB,UAAnB,KAAgC,CAAjC,GAAoCN,UAApC,GAA+C,EAD3D;IAEI,QAAQ,EAAKS,eAAF,IAAuBR,oBAAoB,CAAEQ,eAAF,CAF1D;IAGI,SAAS,EAAGF,mBAAmB,CAACG,kBAHpC;IAII,SAAS,EAAG;EAJhB,EAjCR,CAVA,CADJ;AAuDH,CAvFD;;AAyFA,IAAI,OAAOH,mBAAP,IAA8B,WAA9B,IAA6C,QAAQA,mBAAmB,CAACI,iBAA7E,EAAgG;EAC5F;EACArB,cAAc,CAAE,6BAAF,EAAiC;IAAEsB,MAAM,EAAElB;EAAV,CAAjC,CAAd;AAEH;AACD,kE","sources":["webpack://gutena/external window [\"wp\",\"element\"]","webpack://gutena/webpack/bootstrap","webpack://gutena/webpack/runtime/compat get default export","webpack://gutena/webpack/runtime/define property getters","webpack://gutena/webpack/runtime/hasOwnProperty shorthand","webpack://gutena/webpack/runtime/make namespace object","webpack://gutena/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const {__} = wp.i18n;\nconst { useState } = wp.element;\nconst {\n        __experimentalToggleGroupControl,\n\t    __experimentalToggleGroupControlOption,\n        ColorPalette, GradientPicker,\n         } = wp.components;\nconst { useSelect } = wp.data;\nconst { useEntityProp } = wp.coreData;\nconst {  PluginDocumentSettingPanel } = wp.editPost;\nconst { registerPlugin } = wp.plugins;\nconst ToggleGroupControl = __experimentalToggleGroupControl;\nconst ToggleGroupControlOption = __experimentalToggleGroupControlOption;\n\n/****Meta Block: gutena/postmeta-hero-header-bg-color : start *****/\n \nconst gutena_postmeta_theme_color_settings = () => {\n   \n    const postType = useSelect(\n        ( select ) => select( 'core/editor' ).getCurrentPostType(),\n        []\n    );\n\n    //Check if postType is of post type\n    if( 'post' !== postType ){\n        return null;\n    }\n\n    const [ meta, setMeta ] = useEntityProp( 'postType', postType, 'meta' );\n\n    const colorValue = (typeof meta[ 'gutena_post_theme_color' ] === 'undefined' || meta[ 'gutena_post_theme_color' ] === null )? '': meta[ 'gutena_post_theme_color' ];\n   \n    //Update Post Meta Value\n    const updateColorMetaValue = ( color ) => {\n       \n        if(typeof color === 'undefined' || color === null ) {\n            color = '';\n        }\n\n        setMeta( { ...meta, gutena_post_theme_color: color } );\n       \n    };\n\n    const [ currentTab, setCurrentTab ] = useState(\n\t\t( colorValue.indexOf('gradient') < 0 ) ? 'color' : 'gradient'\n\t);\n    \n\n    return(\n        <>\n        <style>\n            {\n                ( typeof colorValue !== 'undefined' && colorValue != null && colorValue != '' ) ? `.post-type-post .edit-post-visual-editor__post-title-wrapper {\n                    padding: 50px 0px;\n                    margin-bottom: 50px;\n                background: ${colorValue};\n            }`:''\n            }\n        </style>\n        <PluginDocumentSettingPanel\n            className=\"gutena-postmeta-setting-panel\"\n            title=\"Theme color\"\n            initialOpen={ true }\n            icon=\"customizer\"\n        >\n            \n            <ToggleGroupControl\n                value={ currentTab }\n                onChange={ setCurrentTab }\n                label={ __( 'Select color type' ) }\n                hideLabelFromVision\n                isBlock\n            >\n                <ToggleGroupControlOption\n                    value=\"color\"\n                    label={ __( 'Solid' ) }\n                />\n                <ToggleGroupControlOption\n                    value=\"gradient\"\n                    label={ __( 'Gradient' ) }\n                />\n            </ToggleGroupControl>\n            { ( currentTab === 'color') && (\n                <ColorPalette\n                    colors={ gutena_block_editor.postThemeColors }\n                    value={ (colorValue.indexOf('gradient')<0)?colorValue:'' }\n                    onChange={ ( color ) => updateColorMetaValue( color ) }\n                    clearable={ true }\n                    enableAlpha={ true }\n                />\n\t\t\t) }\n            { ( currentTab === 'gradient') && (\n                <GradientPicker\n                    value={ (colorValue.indexOf('gradient')>=0)?colorValue:'' }\n                    onChange={ ( currentGradient ) => updateColorMetaValue( currentGradient ) }\n                    gradients={ gutena_block_editor.postThemeGradients }\n                    clearable={ true }\n                />\n\t\t\t) }\n        </PluginDocumentSettingPanel>\n        </>\n    );\n\n}\n\nif( typeof gutena_block_editor != 'undefined' && '1' === gutena_block_editor.isPostThemeColors ){\n    //Register post meta settings for theme color in right sidebar under post tab\n    registerPlugin( 'gutena-postmeta-theme-color', { render: gutena_postmeta_theme_color_settings } );\n    \n}\n/****Meta Block: gutena/postmeta-hero-header-bg-color : end *****/"],"names":["__","wp","i18n","useState","element","__experimentalToggleGroupControl","__experimentalToggleGroupControlOption","ColorPalette","GradientPicker","components","useSelect","data","useEntityProp","coreData","PluginDocumentSettingPanel","editPost","registerPlugin","plugins","ToggleGroupControl","ToggleGroupControlOption","gutena_postmeta_theme_color_settings","postType","select","getCurrentPostType","meta","setMeta","colorValue","updateColorMetaValue","color","gutena_post_theme_color","currentTab","setCurrentTab","indexOf","gutena_block_editor","postThemeColors","currentGradient","postThemeGradients","isPostThemeColors","render"],"sourceRoot":""}